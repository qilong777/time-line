import { Animation, ListenersOption, MountedEl, TimeLineOption, TimeLineTheme } from "./interface";
import { TimeLineZoomTool } from "./time-line-zoom-tool";
declare function formatTime2Text(time: number): string;
export declare class TimeLineContainer implements TimeLineOption {
    addHour: number;
    nowTime: number;
    private nowDayTime;
    heightLightAreas: any[];
    dayTimeTextFormat: typeof formatTime2Text;
    gapWidth: number;
    itemLineWidth: number;
    theme: TimeLineTheme;
    zoomTool: TimeLineZoomTool;
    animation: Animation;
    rootDom: HTMLElement;
    timeLineWrapDom: HTMLElement;
    timeLineDom: HTMLElement;
    timeHeightLightAreaDom: HTMLElement;
    listeners: ListenersOption;
    private readonly repeatCount;
    private windowEvents;
    constructor(el: MountedEl, option: TimeLineOption);
    dispose(): void;
    private initEventListeners;
    private initMouseWheelListener;
    private initMouseDragListener;
    private initResizeListener;
    zoomCb(): void;
    initOption(option: TimeLineOption): void;
    initRootDom(el: MountedEl): void;
    setNowTime(nowTime: number): void;
    private setDayTimeFromNowTime;
    render(): void;
    renderTimeLine(): void;
    renderHeightLightAreas(): DocumentFragment;
    updateHeightLightAreas(heightLightAreas: number[][]): void;
    renderTimeLineItem(dayTime: number, needSubItem: boolean): HTMLDivElement;
    translateTimeLine(): void;
}
export {};
